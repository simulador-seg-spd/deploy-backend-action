name: CI - Build and Push to ECR

on:
  workflow_call:
    inputs:
      project-language:
        required: true
        type: string
      AWS_ECR_REPOSITORY:
        required: true
        type: string
      AWS_REGION:
        required: true
        type: string
    secrets:
      AWS_ACCOUNT_ID:
        required: true
jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Fazer checkout do reposit√≥rio do projeto
      - name: Checkout repository
        uses: actions/checkout@v2

      # Passo 2: Buildar o projeto baseado na linguagem
      - name: Build project
        run: ./.github/workflows/scripts/build-${{ inputs.project-language }}.sh

      # Passo 3: Logar no Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Passo 4: Build da imagem Docker
      - name: Build Docker image
        run: |
          docker build -t ${{ inputs.AWS_ECR_REPOSITORY }}:latest .

      # Passo 5: Tag da imagem Docker
      - name: Tag Docker image
        run: |
          docker tag ${{ inputs.AWS_ECR_REPOSITORY }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${{ inputs.AWS_ECR_REPOSITORY }}:latest

      # Passo 6: Push da imagem Docker para o ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${{ inputs.AWS_ECR_REPOSITORY }}:latest

      # Passo 7: Definir o URL da imagem como output do CI
      - name: Set Image URL as output
        id: ecr
        run: echo "::set-output name=image-url::${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${{ inputs.AWS_ECR_REPOSITORY }}:latest"
