name: Deploy Backend

on:
  workflow_dispatch: # Permite iniciar manualmente o deploy via interface do GitHub

jobs:
  deploy:
    runs-on: ubuntu-latest

    inputs:
      project-language:
        description: 'Linguagem do projeto (python ou java)'
        required: true
        type: string
      aws-ecr-repository:
        description: 'Nome do repositório ECR'
        required: true
        type: string
      aws-region:
        description: 'Região AWS'
        required: true
        type: string
      aws-account-id:
        description: 'ID da conta AWS'
        required: true
        type: string
      stack-name:
        description: 'Nome da stack do CloudFormation'
        required: true
        type: string

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Passo 1: Executar o CI pipeline
      - name: Run CI pipeline
        uses: ./ci.yml
        id: ci # Define um ID para capturar o output
        with:
          project-language: ${{ inputs.project-language }}
          AWS_ECR_REPOSITORY: ${{ inputs.aws-ecr-repository }}
          AWS_REGION: ${{ inputs.aws-region }}
          AWS_ACCOUNT_ID: ${{ inputs.aws-account-id }}

      # Passo 2: Executar o CD pipeline, passando o ImageUrl
      - name: Run CD pipeline
        uses: ./cd.yml
        with:
          stack-name: ${{ inputs.stack-name }}
          AWS_ECR_REPOSITORY: ${{ inputs.aws-ecr-repository }}
          AWS_REGION: ${{ inputs.aws-region }}
          AWS_ACCOUNT_ID: ${{ inputs.aws-account-id }}
          ImageUrl: ${{ steps.ci.outputs.image-url }} # Passa o URL da imagem gerado no CI para o CD
